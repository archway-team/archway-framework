{"version":3,"file":"index.js","sources":["../../../index.js","../../../pkg/html/index.js","../../../pkg/navigation/index.js"],"sourcesContent":["/* Rendering Engine */\r\nfunction arch(tag, attrs, ...children) {\r\n  return {\r\n    tag,\r\n    attrs,\r\n    children: children.flat() || [],\r\n  };\r\n}\r\n\r\nfunction renderNode(node) {\r\n  let vNode = node;\r\n  let component = typeof node.render == \"function\";\r\n  if (component) {\r\n    vNode = node.render();\r\n    node.vNode = vNode;\r\n  }\r\n\r\n  const { tag, attrs, children } = vNode;\r\n\r\n  let el = document.createElement(tag);\r\n\r\n  for (const [key, value] of Object.entries(attrs)) {\r\n    key.startsWith(\"on\")\r\n      ? el.addEventListener(key.substring(2).toLowerCase(), value)\r\n      : el.setAttribute(key, value);\r\n  }\r\n  for (const child of children) {\r\n    el.appendChild(renderHandler(child));\r\n  }\r\n  if (component) {\r\n    node.vBase = el;\r\n  }\r\n\r\n  return el;\r\n}\r\n\r\nfunction renderHandler(node) {\r\n  return typeof node === \"string\"\r\n    ? document.createTextNode(node)\r\n    : renderNode(node);\r\n}\r\n\r\nfunction mount(node, target) {\r\n  target.appendChild(node);\r\n  return node;\r\n}\r\n\r\nfunction render(node, target) {\r\n  mount(renderHandler(node), target);\r\n}\r\n\r\n/* Diff Algorithm */\r\nfunction zip(xs, ys) {\r\n  const zipped = [];\r\n  for (let i = 0; i < Math.min(xs, ys); i++) {\r\n    zipped.push([xs[i], ys[i]]);\r\n  }\r\n  return zipped;\r\n}\r\n\r\nfunction diffAttrs(oldAttrs, newAttrs) {\r\n  let patches = [];\r\n  for (const [key, value] of Object.entries(newAttrs)) {\r\n    patches.push((node) => {\r\n      key.startsWith(\"on\")\r\n        ? node.addEventListener(key.substring(2).toLowerCase(), value)\r\n        : node.setAttribute(key, value);\r\n\r\n      return node;\r\n    });\r\n  }\r\n  for (const key in oldAttrs) {\r\n    if (!(key in newAttrs)) {\r\n      patches.push((node) => {\r\n        node.removeAttribute(key);\r\n        return node;\r\n      });\r\n    }\r\n  }\r\n  return (node) => {\r\n    for (const patch of patches) {\r\n      patch(node);\r\n    }\r\n    return node;\r\n  };\r\n}\r\n\r\nfunction diffChildren(oldChildren, newChildren) {\r\n  let patches = [];\r\n  oldChildren.forEach((child, i) => {\r\n    patches.push(diffTree(child, newChildren[i]));\r\n  });\r\n\r\n  let _patches = [];\r\n  for (const child of newChildren.slice(oldChildren.length)) {\r\n    _patches.push((node) => {\r\n      node.appendChild(renderHandler(child));\r\n      return node;\r\n    });\r\n  }\r\n  return (parent) => {\r\n    for (const [patch, child] of zip(patches, parent.childNodes)) patch(child);\r\n\r\n    for (const patch of _patches) patch(parent);\r\n\r\n    return parent;\r\n  };\r\n}\r\n\r\nfunction diffTree(oldTree, newTree) {\r\n  if (!newTree) {\r\n    return (node) => {\r\n      node.remove();\r\n    };\r\n  }\r\n  if (typeof oldTree == \"string\" || typeof newTree == \"string\") {\r\n    if (oldTree !== newTree) {\r\n      return (node) => {\r\n        const replacement = renderHandler(newTree);\r\n        node.replaceWith(replacement);\r\n        return replacement;\r\n      };\r\n    } else {\r\n      return (node) => node;\r\n    }\r\n  }\r\n  if (oldTree.tag !== newTree.tag) {\r\n    return (node) => {\r\n      const replacement = renderHandler(newTree);\r\n      node.replaceWith(replacement);\r\n      return replacement;\r\n    };\r\n  }\r\n  const patchAttrs = diffAttrs(oldTree.attrs, newTree.attrs);\r\n  const patchChildren = diffChildren(oldTree.children, newTree.children);\r\n\r\n  return (node) => {\r\n    patchAttrs(node);\r\n    patchChildren(node);\r\n    return node;\r\n  };\r\n}\r\n\r\n/* Component */\r\nclass Component {\r\n  constructor(...props) {\r\n    let attrs = props.shift() || {};\r\n\r\n    this.props = Object.assign(attrs, {\r\n      children: props.flat().filter((v) => v) || [],\r\n    });\r\n\r\n    this.vNode = null;\r\n    this.vBase = null;\r\n    this.state = {};\r\n  }\r\n  setState(state) {\r\n    this.state = Object.assign(\r\n      {},\r\n      this.state,\r\n      typeof state == \"function\" ? state(this.state, this.props) : state\r\n    );\r\n\r\n    renderComponent(this);\r\n  }\r\n}\r\n\r\nfunction renderComponent(node) {\r\n  let nApp = node.render();\r\n  node.vBase = diffTree(node.vBase, nApp)(node.vBase);\r\n  node.vNode = nApp;\r\n}\r\n\r\n/* Exports */\r\nexport { render, arch, Component };\r\n","function arch(tag) {\r\n  return (attrs, ...children) => {\r\n\t\treturn ({\r\n\t\t\ttag,\r\n\t\t\tattrs,\r\n\t\t\tchildren: children.flat() || children,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const a = arch(\"a\");\r\nexport const b = arch(\"b\");\r\nexport const i = arch(\"i\");\r\nexport const p = arch(\"p\");\r\nexport const q = arch(\"q\");\r\nexport const s = arch(\"s\");\r\nexport const br = arch(\"br\");\r\nexport const dd = arch(\"dd\");\r\nexport const dl = arch(\"dl\");\r\nexport const dt = arch(\"dt\");\r\nexport const em = arch(\"em\");\r\nexport const h1 = arch(\"h1\");\r\nexport const h2 = arch(\"h2\");\r\nexport const h3 = arch(\"h3\");\r\nexport const h4 = arch(\"h4\");\r\nexport const h5 = arch(\"h5\");\r\nexport const h6 = arch(\"h6\");\r\nexport const hr = arch(\"hr\");\r\nexport const li = arch(\"li\");\r\nexport const ol = arch(\"ol\");\r\nexport const rp = arch(\"rp\");\r\nexport const rt = arch(\"rt\");\r\nexport const td = arch(\"td\");\r\nexport const th = arch(\"th\");\r\nexport const tr = arch(\"tr\");\r\nexport const ul = arch(\"ul\");\r\nexport const bdi = arch(\"bdi\");\r\nexport const bdo = arch(\"bdo\");\r\nexport const col = arch(\"col\");\r\nexport const del = arch(\"del\");\r\nexport const dfn = arch(\"dfn\");\r\nexport const div = arch(\"div\");\r\nexport const img = arch(\"img\");\r\nexport const ins = arch(\"ins\");\r\nexport const kbd = arch(\"kbd\");\r\nexport const map = arch(\"map\");\r\nexport const nav = arch(\"nav\");\r\nexport const pre = arch(\"pre\");\r\nexport const rtc = arch(\"rtc\");\r\nexport const sub = arch(\"sub\");\r\nexport const sup = arch(\"sup\");\r\nexport const svg = arch(\"svg\");\r\nexport const wbr = arch(\"wbr\");\r\nexport const abbr = arch(\"abbr\");\r\nexport const area = arch(\"area\");\r\nexport const cite = arch(\"cite\");\r\nexport const code = arch(\"code\");\r\nexport const data = arch(\"data\");\r\nexport const form = arch(\"form\");\r\nexport const main = arch(\"main\");\r\nexport const mark = arch(\"mark\");\r\nexport const ruby = arch(\"ruby\");\r\nexport const samp = arch(\"samp\");\r\nexport const span = arch(\"span\");\r\nexport const time = arch(\"time\");\r\nexport const aside = arch(\"aside\");\r\nexport const audio = arch(\"audio\");\r\nexport const input = arch(\"input\");\r\nexport const label = arch(\"label\");\r\nexport const meter = arch(\"meter\");\r\nexport const param = arch(\"param\");\r\nexport const small = arch(\"small\");\r\nexport const table = arch(\"table\");\r\nexport const tbody = arch(\"tbody\");\r\nexport const tfoot = arch(\"tfoot\");\r\nexport const thead = arch(\"thead\");\r\nexport const track = arch(\"track\");\r\nexport const video = arch(\"video\");\r\nexport const button = arch(\"button\");\r\nexport const canvas = arch(\"canvas\");\r\nexport const dialog = arch(\"dialog\");\r\nexport const figure = arch(\"figure\");\r\nexport const footer = arch(\"footer\");\r\nexport const header = arch(\"header\");\r\nexport const iframe = arch(\"iframe\");\r\nexport const legend = arch(\"legend\");\r\nexport const object = arch(\"object\");\r\nexport const option = arch(\"option\");\r\nexport const output = arch(\"output\");\r\nexport const select = arch(\"select\");\r\nexport const source = arch(\"source\");\r\nexport const strong = arch(\"strong\");\r\nexport const address = arch(\"address\");\r\nexport const article = arch(\"article\");\r\nexport const caption = arch(\"caption\");\r\nexport const details = arch(\"details\");\r\nexport const section = arch(\"section\");\r\nexport const summary = arch(\"summary\");\r\nexport const picture = arch(\"picture\");\r\nexport const colgroup = arch(\"colgroup\");\r\nexport const datalist = arch(\"datalist\");\r\nexport const fieldset = arch(\"fieldset\");\r\nexport const menuitem = arch(\"menuitem\");\r\nexport const optgroup = arch(\"optgroup\");\r\nexport const progress = arch(\"progress\");\r\nexport const textarea = arch(\"textarea\");\r\nexport const blockquote = arch(\"blockquote\");\r\nexport const figcaption = arch(\"figcaption\");\r\n","import { Component } from \"../../index.js\";\r\nimport { a } from \"../html/index.js\";\r\n\r\nlet router;\r\n\r\nclass Link extends Component {\r\n  constructor(...props) {\r\n    super(...props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick(e) {\r\n    if (e.ctrlKey || e.metaKey || e.shiftKey) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    if (!router) {\r\n      throw new Error(\r\n        \"You must declare an router before you can use link components.\"\r\n      );\r\n    }\r\n\r\n    router.navigate(this.props.href);\r\n\r\n    return false;\r\n  }\r\n  render() {\r\n    let attrs = Object.assign({}, this.props, {\r\n      onClick: this.handleClick,\r\n    });\r\n\r\n    delete attrs.children;\r\n\r\n    return a(attrs, this.props.children);\r\n  }\r\n}\r\n\r\nclass Router {\r\n  constructor(root) {\r\n    this.routes = {};\r\n    this.current = location.pathname;\r\n\r\n    this.root = root;\r\n    this.init();\r\n\r\n    router = this;\r\n  }\r\n  get(path, render) {\r\n    this.routes[path] = render;\r\n  }\r\n  remove(path) {\r\n    delete this.routes[path];\r\n  }\r\n  init() {\r\n    window.addEventListener(\"popstate\", (e) => {\r\n      const state = e.state;\r\n      if (state !== null) {\r\n        this.restoreHistory();\r\n      }\r\n    });\r\n  }\r\n  async restoreHistory(path) {\r\n    this.saveHistory();\r\n\r\n    path = path || location.pathname + location.search;\r\n    // let cached = getHistoryCache(path)\r\n    // if(cached) { window.scrollTo(0, cached.scroll) }\r\n\r\n    force.clear();\r\n    await this.render(path);\r\n\r\n    this.current = path;\r\n  }\r\n  pushUrlHistory(url) {\r\n    history.pushState({ url }, \"\", url);\r\n  }\r\n  saveHistory() {\r\n    let url = this.current || location.pathname + location.search;\r\n    history.replaceState({ url }, document.title, location.href);\r\n  }\r\n  async navigate(path) {\r\n    if (this.current !== path) {\r\n      await this.restoreHistory(path);\r\n      this.pushUrlHistory(path);\r\n    }\r\n  }\r\n  start() {\r\n    this.render(this.current);\r\n  }\r\n  async render(path) {\r\n    if (this.routes.hasOwnProperty(path)) {\r\n      render(await this.routes[path]({ pathname: path }), this.root);\r\n    } else {\r\n      render(await this.routes[\"404\"]({ pathname: path }), this.root);\r\n    }\r\n  }\r\n}\r\n\r\nexport { Link, Router };\r\n"],"names":["renderHandler","node","document","createTextNode","renderNode","vNode","component","render","tag","attrs","children","el","createElement","key","value","Object","entries","startsWith","addEventListener","substring","toLowerCase","setAttribute","child","appendChild","vBase","diffChildren","oldChildren","newChildren","patches","forEach","i","push","diffTree","_patches","slice","length","parent","patch","zip","xs","ys","zipped","Math","min","childNodes","oldTree","newTree","remove","replacement","replaceWith","patchAttrs","diffAttrs","oldAttrs","newAttrs","removeAttribute","patchChildren","a","arch","flat","router","Link","Component","[object Object]","props","shift","this","assign","filter","v","state","renderComponent","nApp","super","handleClick","bind","e","ctrlKey","metaKey","shiftKey","preventDefault","Error","navigate","href","onClick","Router","root","routes","current","location","pathname","init","path","window","restoreHistory","saveHistory","search","force","clear","url","history","pushState","replaceState","title","pushUrlHistory","hasOwnProperty"],"mappings":"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"}