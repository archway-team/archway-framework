function arch(t,e,...r){return{tag:t,attrs:e,children:r.flat()||[]}}function renderHandler(t){return"string"==typeof t?document.createTextNode(t):function renderNode(t){let e=t,r="function"==typeof t.render;r&&(e=t.render(),t.vNode=e);const{tag:n,attrs:o,children:s}=e;let i=document.createElement(n);for(const[t,e]of Object.entries(o))t.startsWith("on")?i.addEventListener(t.substring(2).toLowerCase(),e):i.setAttribute(t,e);for(const t of s)i.appendChild(renderHandler(t));return r&&(t.vBase=i),i}(t)}function render(t,e){!function mount(t,e){return e.appendChild(t),t}(renderHandler(t),e)}function diffChildren(t,e){let r=[];t.forEach(((t,n)=>{r.push(diffTree(t,e[n]))}));let n=[];for(const r of e.slice(t.length))n.push((t=>(t.appendChild(renderHandler(r)),t)));return t=>{for(const[e,n]of function zip(t,e){const r=[];for(let n=0;n<Math.min(t,e);n++)r.push([t[n],e[n]]);return r}(r,t.childNodes))e(n);for(const e of n)e(t);return t}}function diffTree(t,e){if(!e)return t=>{t.remove()};if("string"==typeof t||"string"==typeof e)return t!==e?t=>{const r=renderHandler(e);return t.replaceWith(r),r}:t=>t;if(t.tag!==e.tag)return t=>{const r=renderHandler(e);return t.replaceWith(r),r};const r=function diffAttrs(t,e){let r=[];for(const[t,n]of Object.entries(e))r.push((e=>(t.startsWith("on")?e.addEventListener(t.substring(2).toLowerCase(),n):e.setAttribute(t,n),e)));for(const n in t)n in e||r.push((t=>(t.removeAttribute(n),t)));return t=>{for(const e of r)e(t);return t}}(t.attrs,e.attrs),n=diffChildren(t.children,e.children);return t=>(r(t),n(t),t)}class Component{constructor(...t){let e=t.shift()||{};this.props=Object.assign(e,{children:t.flat().filter((t=>t))||[]}),this.vNode=null,this.vBase=null,this.state={}}setState(t){this.state=Object.assign({},this.state,"function"==typeof t?t(this.state,this.props):t),function renderComponent(t){let e=t.render();t.vBase=diffTree(t.vBase,e)(t.vBase),t.vNode=e}(this)}}export{Component,arch,render};
//# sourceMappingURL=bundle.js.map
